<template>
	<div class="min-h-screen bg-gradient-to-b from-white to-gray-50 pt-8 pb-20">
		<div class="container mx-auto px-4 py-6">
			<!-- Mobile doctor selector dropdown (visible on small screens) -->
			<div class="mb-6 block md:hidden">
				<label
					for="doctor-select"
					class="text-primary-700 mb-2 block font-semibold"
				>
					Seleccionar Profesional
				</label>
				<select
					id="doctor-select"
					v-model="selectedDoctorId"
					@change="handleDoctorChange"
					class="focus:border-primary-500 focus:ring-primary-200 w-full rounded-md border border-gray-300 bg-white p-3 shadow-sm focus:ring-2 focus:outline-none"
				>
					<option v-for="doctor in doctors" :key="doctor.id" :value="doctor.id">
						{{ doctor.name }} - {{ doctor.specialty }}
					</option>
				</select>
			</div>

			<div class="flex flex-col gap-6 md:flex-row">
				<!-- Sidebar with providers list (hidden on mobile) -->
				<div class="hidden w-full md:block md:w-1/4">
					<div
						class="overflow-hidden rounded-lg border border-gray-200 shadow-sm"
					>
						<div class="bg-primary-700 px-4 py-3 text-lg font-bold text-white">
							NUESTRO EQUIPO
						</div>
						<div class="max-h-[600px] overflow-y-auto">
							<div
								v-for="doctor in doctors"
								:key="doctor.id"
								class="group hover:bg-primary-50 flex cursor-pointer items-center border-b border-gray-100 p-3 transition-all"
								:class="{ 'bg-primary-50': selectedDoctorId === doctor.id }"
								@click="selectDoctor(doctor.id)"
							>
								<div
									class="group-hover:border-primary-300 relative h-14 w-14 overflow-hidden rounded-full border-2 border-white shadow-sm transition-all"
								>
									<img
										:src="doctor.image"
										:alt="doctor.name"
										class="h-full w-full object-cover"
									/>
								</div>
								<div class="ml-3">
									<div
										class="text-primary-700 group-hover:text-primary-800 font-medium"
									>
										{{ doctor.name }}
									</div>
									<div class="text-sm text-gray-600">
										{{ doctor.specialty }}
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>

				<!-- Main content -->
				<div class="w-full md:w-3/4">
					<!-- Doctor video/image section -->
					<div
						class="relative mb-6 overflow-hidden rounded-lg border border-gray-200 shadow-md"
					>
						<div class="relative">
							<div v-if="!isVideoPlaying" class="relative">
								<img
									:src="selectedDoctor.videoThumbnail || selectedDoctor.image"
									:alt="selectedDoctor.name"
									class="h-[300px] w-full object-cover md:h-[400px]"
								/>
								<div
									v-if="selectedDoctor.videoUrl"
									class="absolute inset-0 flex cursor-pointer items-center justify-center bg-black/30 backdrop-blur-sm transition-all hover:bg-black/40"
									@click="playVideo"
								>
									<div
										class="bg-primary-600/90 transform rounded-full p-5 shadow-lg transition-transform hover:scale-110"
									>
										<svg
											xmlns="http://www.w3.org/2000/svg"
											class="h-10 w-10 text-white"
											viewBox="0 0 24 24"
											fill="currentColor"
										>
											<path d="M8 5v14l11-7z" />
										</svg>
									</div>
								</div>
							</div>
							<div v-else class="h-[300px] w-full md:h-[400px]">
								<iframe
									class="h-full w-full"
									:src="videoSrc"
									frameborder="0"
									allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
									allowfullscreen
								></iframe>
							</div>
						</div>

						<!-- Doctor name and specialty -->
						<div class="border-t border-gray-200 bg-white p-6">
							<div class="flex items-center justify-between">
								<div>
									<h1 class="text-primary-800 text-3xl font-bold">
										{{ selectedDoctor.name }}
									</h1>
									<h2 class="text-primary-600 mt-1 text-xl">
										<a href="#" class="hover:underline">
											{{ selectedDoctor.specialty }}
										</a>
									</h2>
								</div>
								<div class="hidden md:block">
									<div class="flex items-center gap-1">
										<span v-for="i in 5" :key="i" class="text-yellow-400">
											<svg
												xmlns="http://www.w3.org/2000/svg"
												viewBox="0 0 24 24"
												fill="currentColor"
												class="h-5 w-5"
											>
												<path
													fill-rule="evenodd"
													d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z"
													clip-rule="evenodd"
												/>
											</svg>
										</span>
									</div>
								</div>
							</div>
						</div>
					</div>

					<!-- Action buttons -->
					<div class="mb-8 flex flex-wrap gap-4">
						<a
							href="#"
							class="flex items-center justify-center rounded-md bg-teal-600 px-6 py-3 font-medium text-white shadow-md transition-all hover:bg-teal-700 hover:shadow-lg focus:ring-2 focus:ring-teal-300 focus:ring-offset-2 sm:w-auto"
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="mr-2 h-5 w-5"
								viewBox="0 0 20 20"
								fill="currentColor"
							>
								<path
									fill-rule="evenodd"
									d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
									clip-rule="evenodd"
								/>
							</svg>
							Solicite Cita
						</a>
						<a
							href="#"
							class="bg-primary-600 hover:bg-primary-700 focus:ring-primary-300 flex items-center justify-center rounded-md px-6 py-3 font-medium text-white shadow-md transition-all hover:shadow-lg focus:ring-2 focus:ring-offset-2 sm:w-auto"
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="mr-2 h-5 w-5"
								viewBox="0 0 20 20"
								fill="currentColor"
							>
								<path
									d="M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z"
								/>
							</svg>
							Referir Paciente
						</a>
					</div>

					<!-- Tab navigation -->
					<div class="mb-6 border-b border-gray-200">
						<div class="flex overflow-x-auto">
							<button
								v-for="(tab, index) in tabs"
								:key="index"
								@click="activeTab = tab.id"
								class="px-4 py-2 font-medium whitespace-nowrap transition-colors"
								:class="
									activeTab === tab.id
										? 'border-primary-600 text-primary-700 border-b-2'
										: 'text-gray-500 hover:text-gray-700'
								"
							>
								{{ tab.name }}
							</button>
						</div>
					</div>

					<!-- Tab content -->
					<div v-if="activeTab === 'about'" class="animate-fadeIn">
						<div
							class="mb-8 rounded-lg border border-gray-200 bg-white p-6 shadow-sm"
						>
							<h3
								class="text-primary-700 mb-4 border-b border-gray-100 pb-2 text-xl font-extrabold tracking-wide"
							>
								CONOZCA A NUESTRO PROFESIONAL DE LA SALUD
							</h3>
							<div class="space-y-4 text-gray-700">
								<p
									v-for="(paragraph, index) in selectedDoctor.about"
									:key="index"
									class="leading-relaxed"
								>
									{{ paragraph }}
								</p>
							</div>
							<div class="mt-6 flex items-center text-gray-700">
								<span class="font-semibold">Idioma:</span>
								<span class="ml-2">
									{{ selectedDoctor.languages.join(', ') }}
								</span>
							</div>
						</div>
					</div>

					<div v-if="activeTab === 'specialties'" class="animate-fadeIn">
						<div
							class="mb-8 rounded-lg border border-gray-200 bg-white p-6 shadow-sm"
						>
							<h3
								class="text-primary-700 mb-4 border-b border-gray-100 pb-2 text-xl font-bold tracking-wide"
							>
								ESPECIALIDADES Y SERVICIOS
							</h3>
							<ul class="grid grid-cols-1 gap-3 sm:grid-cols-2">
								<li
									v-for="(specialty, index) in selectedDoctor.specialities"
									:key="index"
									class="flex items-start"
								>
									<svg
										xmlns="http://www.w3.org/2000/svg"
										class="text-primary-600 mr-2 h-5 w-5 flex-shrink-0"
										viewBox="0 0 20 20"
										fill="currentColor"
									>
										<path
											fill-rule="evenodd"
											d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
											clip-rule="evenodd"
										/>
									</svg>
									<a href="#" class="text-primary-600 hover:underline">
										{{ specialty }}
									</a>
								</li>
							</ul>
						</div>
					</div>

					<div v-if="activeTab === 'location'" class="animate-fadeIn">
						<div
							class="mb-8 rounded-lg border border-gray-200 bg-white p-6 shadow-sm"
						>
							<h3
								class="text-primary-700 mb-4 border-b border-gray-100 pb-2 text-xl font-bold tracking-wide"
							>
								UBICACIÃ“N
							</h3>
							<div class="flex flex-col md:flex-row md:gap-6">
								<div class="mb-4 md:mb-0 md:w-1/2">
									<div class="text-gray-700">
										<h4 class="text-lg font-semibold">
											{{ selectedDoctor.location.name }}
										</h4>
										<p>{{ selectedDoctor.location.address }}</p>
										<p>{{ selectedDoctor.location.city }}</p>
										<p class="mt-4 flex items-center">
											<svg
												xmlns="http://www.w3.org/2000/svg"
												class="text-primary-600 mr-2 h-5 w-5"
												viewBox="0 0 20 20"
												fill="currentColor"
											>
												<path
													d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"
												/>
											</svg>
											{{ selectedDoctor.location.phone }}
										</p>
									</div>
								</div>
								<div class="md:w-1/2">
									<div
										class="h-64 w-full overflow-hidden rounded-lg bg-gray-200"
									>
										<!-- Placeholder for map -->
										<div
											class="flex h-full items-center justify-center bg-gray-100"
										>
											<svg
												xmlns="http://www.w3.org/2000/svg"
												class="h-12 w-12 text-gray-400"
												fill="none"
												viewBox="0 0 24 24"
												stroke="currentColor"
											>
												<path
													stroke-linecap="round"
													stroke-linejoin="round"
													stroke-width="2"
													d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
												/>
												<path
													stroke-linecap="round"
													stroke-linejoin="round"
													stroke-width="2"
													d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"
												/>
											</svg>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div v-if="activeTab === 'education'" class="animate-fadeIn">
						<div
							class="rounded-lg border border-gray-200 bg-white p-6 shadow-sm"
						>
							<h3
								class="text-primary-700 mb-4 border-b border-gray-100 pb-2 text-xl font-bold tracking-wide"
							>
								EDUCACIÃ“N
							</h3>
							<div
								class="grid grid-cols-1 gap-x-6 gap-y-4 text-gray-700 md:grid-cols-2"
							>
								<template
									v-for="(value, key) in selectedDoctor.education"
									:key="key"
								>
									<div class="text-primary-800 font-semibold">{{ key }}:</div>
									<div>{{ value }}</div>
								</template>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</template>

<script setup lang="ts">
	import { ref, computed, watch } from 'vue';
	import type { Doctor } from '~/mocks/doctors';
	import personnel from '~/mocks/doctors';

	// Video playing state
	const isVideoPlaying = ref(false);

	// Sample data for doctors
	const doctors = ref<Doctor[]>(personnel);

	// Selected doctor state
	const selectedDoctorId = ref<number>(1);

	// Tab navigation
	const tabs = [
		{ id: 'about', name: 'BiografÃ­a' },
		{ id: 'specialties', name: 'Especialidades' },
		{ id: 'location', name: 'UbicaciÃ³n' },
		{ id: 'education', name: 'EducaciÃ³n' },
	];
	const activeTab = ref('about');

	// Computed property to get the selected doctor
	const selectedDoctor = computed(() => {
		return (
			doctors.value.find((doctor) => doctor.id === selectedDoctorId.value) ||
			doctors.value[0]
		);
	});

	// Computed property for video source with autoplay parameter
	const videoSrc = computed(() => {
		if (!selectedDoctor.value.videoUrl) return '';

		// Add autoplay parameter to URL if it's YouTube
		if (selectedDoctor.value.videoUrl.includes('youtube.com')) {
			// Handle YouTube URLs
			const url = new URL(selectedDoctor.value.videoUrl);
			url.searchParams.set('autoplay', '1');
			return url.toString();
		} else if (selectedDoctor.value.videoUrl.includes('vimeo.com')) {
			// Handle Vimeo URLs
			return `${selectedDoctor.value.videoUrl}${selectedDoctor.value.videoUrl.includes('?') ? '&' : '?'}autoplay=1`;
		}

		return selectedDoctor.value.videoUrl;
	});

	// Function to select a doctor
	const selectDoctor = (id: number) => {
		selectedDoctorId.value = id;
		isVideoPlaying.value = false;
	};

	// Function to handle doctor change from dropdown
	const handleDoctorChange = () => {
		isVideoPlaying.value = false;
	};

	// Function to play video
	const playVideo = () => {
		if (selectedDoctor.value.videoUrl) {
			isVideoPlaying.value = true;
		}
	};

	// Reset video playing state when doctor changes
	watch(selectedDoctorId, () => {
		isVideoPlaying.value = false;
	});
</script>

<style>
	.animate-fadeIn {
		animation: fadeIn 0.3s ease-in-out;
	}

	@keyframes fadeIn {
		from {
			opacity: 0;
			transform: translateY(10px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
</style>
